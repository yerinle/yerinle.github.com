<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: clojure | JVM Rocks]]></title>
  <link href="http://yerinle.github.com/blog/categories/clojure/atom.xml" rel="self"/>
  <link href="http://yerinle.github.com/"/>
  <updated>2014-01-07T20:19:50+00:00</updated>
  <id>http://yerinle.github.com/</id>
  <author>
    <name><![CDATA[Yinka Erinle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vertx: Create vertx instance using Platform Manager (clojure)]]></title>
    <link href="http://yerinle.github.com/blog/2014/01/07/vertx-create-vertx-instance-using-platform-manager-clojure/"/>
    <updated>2014-01-07T18:38:00+00:00</updated>
    <id>http://yerinle.github.com/blog/2014/01/07/vertx-create-vertx-instance-using-platform-manager-clojure</id>
    <content type="html"><![CDATA[<p><em>Setup project as described in <a href="http://yerinle.github.io/blog/2013/12/24/vertx-leiningen-plugin-for-vertx-developlment-clojure/">previous post</a></em></p>

<p><em>open a terminal window, run lein repl</em>
<code>
lein repl
</code></p>

<p><em>import the platform locator</em>
<code>clojure
(import 'org.vertx.java.platform.PlatformLocator)
</code></p>

<p><em>create instance of platform manager</em>
<code>clojure
(def pm (.createPlatformManager PlatformLocator/factory))
</code></p>

<p><em>require vertx.embed and then set vertx instance atom</em>
<code>clojure
(require '[vertx.embed :as embed])
(embed/set-vertx! (.vertx pm))
</code></p>

<p><em>now you can start a server, for example to start a http server do the following</em><br>
<em>import the http namespace</em>
<code>clojure
  (require '[vertx.http :as http]))
</code></p>

<p><em>declare a request handler</em>
``` clojure
  (defn req-handler [req]
  (-> (http/server-response req)</p>

<pre><code>  (http/add-header "Content-Type" "text/html; charset=UTF-8")
  (http/end "&lt;html&gt;&lt;body&gt;&lt;h4&gt;It's working!&lt;/h4&gt;&lt;/body&gt;&lt;/html&gt;")))
</code></pre>

<p>```</p>

<p><em>start server using the handler and assign it to a variable server</em>
```
(def server (-> (http/server)</p>

<pre><code>(http/on-request req-handler)
(http/listen 8080 "localhost")))
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vertx: Leiningen plugin for vertx developlment (clojure)]]></title>
    <link href="http://yerinle.github.com/blog/2013/12/24/vertx-leiningen-plugin-for-vertx-developlment-clojure/"/>
    <updated>2013-12-24T19:07:00+00:00</updated>
    <id>http://yerinle.github.com/blog/2013/12/24/vertx-leiningen-plugin-for-vertx-developlment-clojure</id>
    <content type="html"><![CDATA[<p><em>Run the following commands to setup project</em></p>

<p><em>where <code>project-name</code> is the name of the project</em></p>

<p><code>
lein new vertx &lt;project-name&gt;
cd &lt;project-name&gt;
lein vertx run
</code></p>

<p><a href="https://github.com/isaiah/lein-vertx">github project</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure: List public methods in a java class]]></title>
    <link href="http://yerinle.github.com/blog/2013/06/08/clojure-list-methods-in-a-class/"/>
    <updated>2013-06-08T14:51:00+01:00</updated>
    <id>http://yerinle.github.com/blog/2013/06/08/clojure-list-methods-in-a-class</id>
    <content type="html"><![CDATA[<p><em>use the function below to list the public methods in a java class</em></p>

<p>``` clojure list-methods function
(defn list-methods
  "List methods in a class"
  [c]
  (clojure.pprint/pprint</p>

<pre><code>(map #(.toString %) (.getMethods c))))
</code></pre>

<p>```
<em>or using the threading macro</em></p>

<p>``` clojure list-methods function : using threading macro
(defn list-methods
  "List methods in a class"
  [c]
  (->> c</p>

<pre><code>(.getMethods)
(map #(.toString %))
clojure.pprint/pprint))
</code></pre>

<p>```
<em>examples</em></p>

<p>``` clojure examples
;; methods in the String class
(list-methods String)</p>

<p>;; public methods in the Long class
(list-methods Long)
```</p>
]]></content>
  </entry>
  
</feed>
